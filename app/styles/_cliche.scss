@import "variables";
@import "mixins";

.page {
  &.cliche {

    .master-form {
      & > .content {
        @include flex-basis(1px);

        & > .form {
          width: 100%;
        }

        .section.top {
          padding: 10px 10px 0 10px;
          border-bottom: 1px solid #ddd;
        }

        .section {
          margin-bottom: 30px;
        }
      }
    }

    .sub-heading {
      position: relative;
    }

    .console {
      position: relative;
      overflow: hidden;

      .heading {
        font-weight: bold;
        border-top: 2px solid $orange;
        border-bottom: 0;
        display: block;
        padding: 2px 10px;
        cursor: pointer;
        i {
          padding: 4px;
          font-size: 10px;
        }
      }

      .console-trace {
        height: 150px;
        border: none;
        @extend %scrollbar;
        @include transition(height 0.2s ease);
      }

      &.console-hide {
        .console-trace {
          height: 0px;
          padding: 0;
          overflow: hidden;
        }
        .copy-btn {
          display: none;
        }
      }

      .copy-btn {
        position: absolute;
        bottom: 5px;
        right: 5px;
        z-index: 100;
      }
    }



    .row-margin {
      @extend .clearfix;
      margin-right: -$custom-gutter;
      margin-left: -$custom-gutter;
    }

    @for $num from 1 through 12 {
      .col-md-#{$num} {
        padding-left: $custom-gutter;
        padding-right: $custom-gutter;
      }
    }
  }
}

/* Saving indicator */
.saving {
  opacity: 0;
  position: absolute;
  bottom: 0;
  left: 0;
  padding: 5px 10px;
  font-size: 12px;
  color: #fff;
  background-color: rgba(0, 0, 0, 0.2);
  @include border-radius(2px 0 0 0);
  @include transition(opacity 0.3s ease);
  &.show {
    opacity: 1;
  }
}

/* Revisions list from the modal */
.revisions-list {
  margin: 0;
  max-height: 456px;
  overflow: auto;
  border-bottom: 1px solid #ddd;
  padding: 1px 0;
  @extend %scrollbar-blue;

  & > li {
    cursor: pointer;
    border-bottom: 1px solid #ddd;
    padding: 10px 15px;

    a {
      display: block;
      text-decoration: none;
      color: #555;
      .version-tag {
        margin-right: 10px;
        font-weight: bold;
      }
      .label {
        margin-left: 10px;
      }
    }

    &:last-child {
      border-bottom: none;
    }
  }
}

.meta-list {
  margin-bottom: 20px;
}

.json-url {
  font-size: 16px;
  margin: 20px 0;
  padding: 10px;
  border: 1px solid #ddd;
  &:hover {
    text-decoration: none !important;
  }

  width: 100%;
  @extend %ellipsis;
}


/* Property box for displaying input/output/argument values */
.property-box {
  margin: 0 0 10px 0;
  border: 1px solid #ddd;

  &:hover {
    @include transition(border 0.3s ease);
    border: 1px solid #bbb;
  }

  & > .include {

    & > .property-box-header {
      margin: 0;
      background-color: #eee;
      position: relative;
      @include user-select(none);

      &.tool {
        cursor: pointer;

        &:before {
          content: '';
          display: block;
          position: absolute;
          top: 50%;
          left: 10px;
          border-left: 5px solid #555;
          border-top: 5px solid transparent;
          border-bottom: 5px solid transparent;
          margin-top: -5px;
        }
      }

      .property-box-header-inner.arg {
        .property-box-short-info {
          padding: {
            top: 10px;
            bottom: 10px;
          }
        }
      }

      .property-box-short-info {
        padding: 10px 10px 10px 25px;
        margin-right: 60px;
        .position {
          background-color: $orange;
          color: #fff;
          padding: 0 5px;
        }
        .required {
          color: #cc0000;
        }
        //.info-block {
        //  display: inline-block;
        //  vertical-align: middle;
        //  margin-right: 10px;
        //}
        .position,
        .info-block {
          display: inline-block;
          vertical-align: middle;
          margin-right: 10px;
        }
      }

      .property-box-actions {
        font-weight: bold;
        display: inline-block;
        margin-left: 5px;

        a:not(.btn) {
          color: #555;
          font-size: 17px;
          line-height: 15px;
          display: inline-block;
            vertical-align: middle;
          padding: 12px 10px;

          &:last-child {
            margin-left: -5px;
          }
          &:not(.disabled) {
            &:hover {
              background-color: #ddd;
            }
          }
          &.disabled {
            opacity: 0.7;
            cursor: default;
          }
        }
      }
    }

    & > .property-box-body {
      display: none;
      padding: 10px;
      background-color: #f9f9f9;

      .box-col {
        .key {
          float: left;
          margin-right: 10px;
        }
        .value {
          display: block;
          margin: 0;
          text-overflow: ellipsis;
          max-width: 100%;
          white-space: nowrap;
          overflow: hidden;

          .error {
            color: $red;
          }
        }
      }

      .legend-small {
        font-size: 14px;
        margin: 10px 0 20px;
      }
    }
  }

  &.script,
  &.active {
    & > .include {
      & > .property-box-header {
        border-bottom: 1px solid #ddd;
        &.tool {
          &:before {
            border-top: 5px solid #555;
            border-left: 5px solid transparent;
            border-right: 5px solid transparent;
            border-bottom: none;
            margin-top: -2.5px;
          }
        }
      }
      & > .property-box-body {
        display: block;
      }
    }
  }

}

/* Input property box small */
.input-field-sm {
  .input-property {
    .form-group {
      margin-bottom: 0;
      .control-label {
        .input-key {
          max-width: 240px;
        }
        .input-key-inner {
          display: block;
          text-overflow: ellipsis;
          overflow: hidden;
        }
        .min-max {
          display: block;
        }
      }
    }
  }
}

$inputs-border-color: #d7d7d7;

/**
  Input-field directive styles

  Includes layouts for grouping input-fields in Cliche and Dyole

*/
.category-container {
  margin-bottom: 20px;
  &:last-of-type {
    margin-bottom: 35px;
  }

  // category title for grouped params in workflow editor
  &.sm {
    .category-title {
      padding-left: 10px;
      margin-top: 30px;

      &.first {
        margin-top: 10px;
      }
    }

    .input-container {
      margin-left: 10px;
    }
  }

  .category-title {
    font-weight: bold;
    cursor: pointer;

      .fa.pull-right{
          position: absolute;
          right: 0;
      }
  }
}

.input-container {
  @include box-shadow(0 0 4px 2px rgba(0, 0, 0, .02));
  border: 1px solid $inputs-border-color;

   //animation for collapse and expand
  &.ng-hide-animate {
    transition:0.5s linear all;
    overflow: hidden;
    // this is more than it's ever expected to be
    max-height: 20vh;
  }

  &.ng-hide {
    transition:0.5s linear all;
    max-height: 0;
  }
}

.input-field, .input-field-sm {
  .form-group {
    border-bottom: 1px solid $inputs-border-color;
  }

  &:last-of-type {
    .form-group {
      border-bottom: none;
    }
  }
}
/* Input property box regular */
.input-property {
  .form-group {
    margin: 0;

    .control-label {
      padding: 10px 10px 0 15px;
      margin: 0 0 -5px;
      position: relative;
      display: block;

      .input-key {
        display: inline-block;
        text-overflow: ellipsis;
        overflow: hidden;
        font-weight: bold;
      }

      .min-max {
        font-weight: normal;
        i {
          font-style: normal;
        }
      }

      .icons {
        float: right;
        margin: 0;

        label {
          display: inline-block;
        }

        // hide checkboxes so icons inside the checkbox label will toggle their state
        input[type="checkbox"] {
          display: none;
        }

        i {
          cursor: pointer;
          padding: 0 5px;
          vertical-align: middle;
          @include transition(color .2s ease, opacity .2s linear);
        }

        .fa-unlock-alt, .fa-lock {
          font-size: 16px;
        }

        .fa-unlock-alt {
          color: $brand-primary;
        }

        .fa-toggle-on, .fa-toggle-off {
          font-size: 18px;
        }

        .fa-toggle-on {
          color: $brand-success;
        }

        .disabled {
          color: inherit;
          opacity: .4;
          cursor: not-allowed;
        }
      }
    }

    .input-property-body {
      padding: 15px;
      overflow: auto;
      min-width: 100%;

      .checkbox {
        margin: 0;

        label {
          @extend %ellipsis;
          width: 100%;
        }
      }

      &.split {
        & > .form-control {
          display: inline-block;
          &:nth-child(1) {
            width: 40%;
          }
          &:nth-child(2) {
            margin-left: -5px;
            width: 60%;
          }
        }
      }
    }

  }

  .alert {
    margin:0;
    padding: 6px 10px;
  }
}

/* Expression edit form */
.expression-form {
  margin-bottom: 10px;

  .control-label {
    font-weight: bold;
  }

  .form-control {
    margin-left: 5px;
  }

  .flex-box-row {
    @include align-items();
    .flex-box-row {
      margin-left: 10px;
    }
  }

}

/* Modal main actions (cancel, ok and so on) */
.main-actions {
  overflow: auto;
  padding: 10px 0;
  margin: 10px 0 0 0;
}

$selection-color: #51cfff;

/* Json / Command box */
pre.json-trace,
.json-trace pre,
pre.console-trace,
.console-trace pre,
pre.result  {
  background-color: #222;
  border-color: $orange;
  color: $orange;
  margin: 0;
  border-top: none;
  margin-top: -1px;
  padding-bottom: 40px;
  @include box-shadow(none);
  @include border-radius(0);

  &.error {
    color: #ff0000;
    border: 1px solid #cc0000;
  }
}

.json-trace, .console-trace, .result {
  ::selection, &::selection {
    color: #222;
    background: $selection-color;
  }
  ::-moz-selection, &::-moz-selection {
    color: #222;
    background: $selection-color;
  }
}
pre.result {
  padding: 20px;
}

/* Command box */
.console-trace {
  font-size: 20px;
  &.wait {
    &:after {
      content: 'please wait...';
      display: block;
      @extend %trace-box;
    }
  }
}

.expression-wrap {
  .input-group {
    position: relative;

    &.error {
      .form-control {
        padding-left: 22px;
      }
    }

    .error {
      position: absolute;
      top: 10px;
      left: 5px;
      color: $red;
      z-index: 100;
    }
  }
}
